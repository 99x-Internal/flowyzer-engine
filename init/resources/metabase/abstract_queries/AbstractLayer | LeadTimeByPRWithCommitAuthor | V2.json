{
    "name": "AbstractLayer | LeadTimeByPRWithCommitAuthor | V2",
    "dataset_query": {
      "database": 2,
      "type": "native",
      "native": {
        "query": "WITH workitem_task AS ( SELECT REPLACE(id, 'Azure-Workitems', 'Azure-Repos') AS transformed_id, *, expanded_data.value AS statusChange FROM \"tms_Task\" LEFT JOIN LATERAL json_array_elements(\"statusChangelog\"::json) AS expanded_data ON true WHERE origin='azure_workitems' ), task AS ( SELECT *, statusChange::json->'status'->>'oldValue' AS \"statusChangeOldValue\", statusChange::json->'status'->>'newValue' AS \"statusChangeNewValue\", (statusChange::json->>'changedAt')::timestamptz AS \"statusChangeChangedAt\" FROM workitem_task ), lead_time_by_pr AS ( SELECT pr.id AS \"prId\", pr.origin AS \"prOrigin\", pr.number AS \"prUID\", pr.author AS \"prAuthor\", pr.\"createdAt\" AS \"prCreatedAt\", pr.\"mergedAt\" AS \"prMergedAt\", pr.\"stateDetail\", pr.\"stateCategory\", pr_commit.author AS \"commitAuthor\", (CASE WHEN \"user\".name IS NULL THEN pr_commit.author ELSE \"user\".name END) AS \"commitAuthorName\", task.id AS \"taskId\", task.origin AS \"taskOrigin\", org.id AS \"orgId\", org.uid AS \"orgUID\", repo.id AS \"repoId\", repo.origin AS \"repoOrigin\", repo.name AS \"repoName\", repo.\"fullName\" AS \"repoFullName\", task.\"createdAt\" AS \"TaskPickupTime_Start\", sprint.\"name\" AS \"SprintName\", sprint.\"startedAt\" AS \"SprintStarted_Time\", \"statusChangeChangedAt\" AS \"CodingTime_Start\", pr.\"createdAt\" AS \"ReviewPickupTime_Start\", CASE WHEN position('pull request status to' in pr_comment.comment) > 0 THEN pr.\"createdAt\" ELSE pr_comment.\"createdAt\" END AS \"ReviewTime_Start\", pr.\"mergedAt\" AS \"ReviewTime_End\", rank() OVER (PARTITION BY pr.id ORDER BY \"statusChangeChangedAt\" ASC, pr_comment.\"createdAt\" ASC) as \"rank\" FROM \"vcs_PullRequest\" AS pr JOIN \"tms_TaskPullRequestAssociation\" AS task_pr ON task_pr.\"pullRequest\"=pr.id LEFT JOIN ( SELECT * FROM \"vcs_PullRequestComment\" WHERE comment NOT LIKE '% as a reviewer' AND comment NOT LIKE 'The reference % was updated.' AND comment NOT LIKE '%removed%from the reviewers%' ) AS pr_comment ON pr_comment.\"pullRequest\"=pr.id JOIN task ON task_pr.task=task.transformed_id JOIN \"vcs_Organization\" AS org ON org.id=task.organization JOIN \"vcs_Repository\" As repo ON repo.id=pr.repository JOIN \"tms_Sprint\" AS sprint ON sprint.id=task.sprint JOIN ( SELECT LOWER(vc.author) as \"author\", prc.\"pullRequest\" FROM \"vcs_Commit\" AS vc JOIN \"vcs_PullRequestCommit\" AS prc ON vc.id=REGEXP_REPLACE(prc.\"pullRequest\", '\\|\\d+$', prc.\"commit\") WHERE vc.message NOT LIKE 'Merged PR%' GROUP BY LOWER(vc.author), prc.\"pullRequest\" ) AS pr_commit ON pr_commit.\"pullRequest\" = pr.id LEFT JOIN ( SELECT * FROM \"vcs_User\" WHERE \"vcs_User\".name IS NOT NULL ) AS \"user\" ON LOWER(\"user\".id)=pr_commit.author WHERE \"statusChangeNewValue\" = 'Development In Progress' ORDER BY pr.id ) SELECT *, EXTRACT(EPOCH FROM (\"SprintStarted_Time\" - \"TaskPickupTime_Start\"))/3600 AS \"ShelfTime\", EXTRACT(EPOCH FROM (\"CodingTime_Start\" - \"SprintStarted_Time\"))/3600 AS \"TaskPickupTime\", EXTRACT(EPOCH FROM (\"ReviewPickupTime_Start\" - \"CodingTime_Start\"))/3600 AS \"CodingTime\", EXTRACT(EPOCH FROM (\"ReviewTime_Start\" - \"ReviewPickupTime_Start\"))/3600 AS \"ReviewPickupTime\", EXTRACT(EPOCH FROM (\"ReviewTime_End\" - \"ReviewTime_Start\"))/3600 AS \"ReviewTime\" FROM lead_time_by_pr WHERE rank=1 AND \"SprintStarted_Time\" > \"TaskPickupTime_Start\" AND \"CodingTime_Start\" > \"SprintStarted_Time\" AND \"ReviewPickupTime_Start\" > \"CodingTime_Start\" AND \"ReviewTime_Start\" > \"ReviewPickupTime_Start\" AND \"ReviewTime_End\" > \"ReviewTime_Start\""
      }
    },
    "display": "table",
    "collection_id": 13,
    "visualization_settings": {}
  }
  